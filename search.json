[{"path":"https://delma.ala.org.au/articles/quick_start_guide.html","id":"methodological-approach","dir":"Articles","previous_headings":"","what":"Methodological approach","title":"Quick start guide","text":"convert markdown EML, delma relies assumption header levels markdown reflect nested structure resulting xml. example, markdown file might contain text: parse xml: accomplish conversion, built set parsers convert data sequence: Rather export individual parsers, delma provides set transformers as_eml_ prefix, e.g.: Every permutation as_eml_ functions provided delma, meaning can simply choose outcome looking , let delma handle parsing chain needed return object class require.","code":"# EML ## Dataset ### Title My title <EML>   <dataset>     <title>My title<\/title>   <\/dataset> <EML> .md file -> character -> tibble -> list -> xml -> .xml file library(delma)  c(\"# Heading 1\",    \"## Heading 2\",   \"text content\") |>   as_eml_tibble()  c(\"# Heading 1\",    \"## Heading 2\",   \"text content\") |>   as_eml_xml()"},{"path":"https://delma.ala.org.au/articles/quick_start_guide.html","id":"reading-and-writing","dir":"Articles","previous_headings":"","what":"Reading and writing","title":"Quick start guide","text":"standard ALA R packages, read_ functions delma return tibble. two variants, one reading data markdown: second reading data EML: corresponding write functions write_md() write_eml(). functions accept objects classes supported delma, possible pipe read write functions together without intermediate stages: worth noting, though, quite simple wrapper functions existing import transformation functions. example, code block can rewritten using one delma function, follows:","code":"file <- system.file(\"example_data\",                      \"README_md_example.md\",                      package = \"delma\") read_md(file) read_eml(\"https://collections.ala.org.au/ws/eml/dr368\") system.file(\"example_data\",              \"README_md_example.md\",              package = \"delma\") |>   read_md() |>   write_eml(\"output.xml\") library(xml2)  system.file(\"example_data\",              \"README_md_example.md\",              package = \"delma\") |>   base::readLines() |>   delma::as_eml_xml() |>   xml2::write_xml(\"output.xml\")"},{"path":"https://delma.ala.org.au/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Shandiya Balasubramaniam. Author. Dax Kellie. Author.","code":""},{"path":"https://delma.ala.org.au/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Kellie D, Balasubramaniam S (2025). delma: Convert Markdown Ecological Metalanguage (EML) Back. R package version 0.1.0, https://paperbark.ala.org.au.","code":"@Manual{,   title = {delma: Convert Markdown to Ecological Metalanguage (EML) and Back},   author = {Martin Westgate and Dax Kellie and Shandiya Balasubramaniam},   year = {2025},   note = {R package version 0.1.0},   url = {https://paperbark.ala.org.au}, }"},{"path":[]},{"path":"https://delma.ala.org.au/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convert markdown to ecological meta language (EML) and back","text":"delma package converting metadata statements written markdown, RMarkdown Quarto markdown Ecological Meta-language (EML). named genus legless lizards endemic Australia, whose name happens contain letters ‘e’, ‘m’ ‘l’. logo depicts striped legless lizard (Delma impar) style classic mobile game ‘snake’, play observation Delma often mistaken snakes. drawn Martin Westgate. comments, questions suggestions, please contact us.","code":""},{"path":"https://delma.ala.org.au/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert markdown to ecological meta language (EML) and back","text":"package active development, yet available CRAN. can install latest development version GitHub : Load package:","code":"install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/delma\") library(delma)"},{"path":"https://delma.ala.org.au/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Convert markdown to ecological meta language (EML) and back","text":"primary use case delma manipulate format metadata statements sharing biodiversity data. first step create markdown file, add headings like conform EML standard. header ‘level’ (.e. number #) used designate degree nesting. don’t want start scratch, can use example dataset provided: straightforward export working directory using write_md(): done, import R using read_md(). stored tibble: can export xml file without intermediate steps: detailed description delma’s capabilities methods, see ‘Quick start guide’ vignette.","code":"library(dplyr) use_metadata() #> [1] FALSE write_md(metadata_example, \"metadata.md\") x <- read_md(\"metadata.md\") x write_eml(x, \"metadata.xml\")"},{"path":"https://delma.ala.org.au/index.html","id":"citing-delma","dir":"","previous_headings":"","what":"Citing delma","title":"Convert markdown to ecological meta language (EML) and back","text":"generate citation package version using, can run: current recommended citation : Westgate MJ, Balasubramaniam S & Kellie D (2024) delma: Convert markdown files EML. R Package version 0.1.0.","code":"citation(package = \"delma\")"},{"path":"https://delma.ala.org.au/reference/as_eml_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to a character vector — as_eml_chr","title":"Convert metadata to a character vector — as_eml_chr","text":"functions take objects class tbl_df (.e. tibbles), list xml_document (xml2 package), convert vector strings human- machine- readable markdown.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to a character vector — as_eml_chr","text":"","code":"as_eml_chr(x, ...)  # S3 method for class 'character' as_eml_chr(x, ...)  # S3 method for class 'tbl_df' as_eml_chr(x, ...)  # S3 method for class 'list' as_eml_chr(x, ...)  # S3 method for class 'xml_document' as_eml_chr(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to a character vector — as_eml_chr","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to a character vector — as_eml_chr","text":"character vector formatted markdown.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to a list — as_eml_list","title":"Convert metadata to a list — as_eml_list","text":"Takes object class character, xml_document tibble, converts list. converting xml_document, simply wrapper xml2::as_list()","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to a list — as_eml_list","text":"","code":"as_eml_list(x, ...)  # S3 method for class 'character' as_eml_list(x, ...)  # S3 method for class 'tbl_df' as_eml_list(x, ...)  # S3 method for class 'list' as_eml_list(x, ...)  # S3 method for class 'xml_document' as_eml_list(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to a list — as_eml_list","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to a list — as_eml_list","text":"list, nested structure XML/md attributes XML nodes, preserved.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to a tibble — as_eml_tibble","title":"Convert metadata to a tibble — as_eml_tibble","text":"Takes objects class character, list xml_document converts tibble particular structure, designed storing nested data. Tibbles required attributes stored list-columns, supported class data.frame.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to a tibble — as_eml_tibble","text":"","code":"as_eml_tibble(x, ...)  # S3 method for class 'character' as_eml_tibble(x, ...)  # S3 method for class 'tbl_df' as_eml_tibble(x, ...)  # S3 method for class 'list' as_eml_tibble(x, ...)  # S3 method for class 'xml_document' as_eml_tibble(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to a tibble — as_eml_tibble","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to a tibble — as_eml_tibble","text":"object class tbl_df, tbl data.frame, containing following fields: level (int) gives nestedness level node/heading question label (chr) xml tag text (chr) text stored within tag attributes (list) attributes tag","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to an xml_document — as_eml_xml","title":"Convert metadata to an xml_document — as_eml_xml","text":"Takes character vector, tibble, list converts xml_document, defined xml2 package. converting list, simply wrapper xml2::as_xml_document()","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to an xml_document — as_eml_xml","text":"","code":"as_eml_xml(x, ...)  # S3 method for class 'character' as_eml_xml(x, ...)  # S3 method for class 'tbl_df' as_eml_xml(x, ...)  # S3 method for class 'list' as_eml_xml(x, ...)  # S3 method for class 'xml_document' as_eml_xml(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to an xml_document — as_eml_xml","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to an xml_document — as_eml_xml","text":"xml_document specified nodes attributes.","code":""},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of a metadata statement — check_eml","title":"Check validity of a metadata statement — check_eml","text":"Darwin Core standard, metadata statements mandatory must provided Ecological Meta Language (EML) file called eml.xml. function applies series checks designed GBIF check structure specified xml document consistency standard. Note, however, function check content files, meaning file structurally sound still lacking critical information.","code":""},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of a metadata statement — check_eml","text":"","code":"check_eml(x, file)"},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of a metadata statement — check_eml","text":"x Object class handled delma; .e. character, tbl_df, list xml_document. file Alternatively EML file check. x file supplied, x chosen.","code":""},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of a metadata statement — check_eml","text":"Invisibly returns tibble showing parsed errors; empty tibble errors identified.","code":""},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check validity of a metadata statement — check_eml","text":"function uses local versions dc.xsd, eml-gbif-profile.xsd eml.xsd downloaded http://rs.gbif.org/schema/eml-gbif-profile/1.3/ 2024-09-25.","code":""},{"path":"https://delma.ala.org.au/reference/check_eml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check validity of a metadata statement — check_eml","text":"","code":"if (FALSE) { # \\dontrun{ # check a file check_eml(file = \"https://collections.ala.org.au/ws/eml/dr368\") } # }"},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata between markdown and EML — delma-package","title":"Convert metadata between markdown and EML — delma-package","text":"Ecological Meta Language common framework describing ecological datasets can shared reused. delma supports users write metadata statements markdown greater transparency ease--use, convert EML efficient transfer.","code":""},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert metadata between markdown and EML — delma-package","text":"Basic usage read_eml()/write_eml() - Convert EML tibbles read_md()/write_md() - Convert markdown files tibbles check_eml() - Check metadata statement relevant standards Type conversion as_eml_chr() - Convert metadata class character as_eml_tibble() - Convert metadata class tbl_df (.e. tibble) as_eml_list() - Convert metadata class list as_eml_xml() - Convert metadata class xml_document","code":""},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert metadata between markdown and EML — delma-package","text":"questions, comments suggestions, please email support@ala.org.au.","code":""},{"path":[]},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert metadata between markdown and EML — delma-package","text":"Maintainer: Martin Westgate martin.westgate@csiro.au Authors: Shandiya Balasubramaniam shandiya.balasubramaniam@csiro.au Dax Kellie dax.kellie@csiro.au","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read or write EML-formatted metadata — read_eml","title":"Read or write EML-formatted metadata — read_eml","text":"read_eml() imports metadata EML file workspace tibble. write_eml() write string, tibble, list xml_document EML file. Note EML files always file extension .xml.","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read or write EML-formatted metadata — read_eml","text":"","code":"read_eml(file)  write_eml(x, file)"},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read or write EML-formatted metadata — read_eml","text":"file Filename read write . case read_eml(), can alternatively url valid EML document. x Object class handled delma; .e. character, tbl_df, list xml_document.","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read or write EML-formatted metadata — read_eml","text":"read_eml() returns object class tbl_df, tbl data.frame (.e. tibble). write_eml() return anything, called side-effect writing specified EML file disk","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read or write EML-formatted metadata — read_eml","text":"","code":"if (FALSE) { # \\dontrun{ # read from a url df <- read_eml(\"https://collections.ala.org.au/ws/eml/dr368\")  # write to disk write_eml(df, \"example.xml\") } # }"},{"path":"https://delma.ala.org.au/reference/read_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Read or write markdown-formatted metadata — read_md","title":"Read or write markdown-formatted metadata — read_md","text":"read_md() imports metadata markdown file workspace tibble. write_md() write string, tibble, list xml_document markdown file.","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read or write markdown-formatted metadata — read_md","text":"","code":"read_md(file)  write_md(x, file)"},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read or write markdown-formatted metadata — read_md","text":"file Filename read write . Must either .md, .Rmd .Qmd file. x Object class handled delma; .e. character, tbl_df, list xml_document.","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read or write markdown-formatted metadata — read_md","text":"read_md() returns object class tbl_df, tbl data.frame (.e. tibble). write_md() return anything, called side-effect writing specified markdown file disk.","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read or write markdown-formatted metadata — read_md","text":"","code":"if (FALSE) { # \\dontrun{ # read from a url file <- system.file(\"example_data\",                      \"README_md_example.md\",                      package = \"delma\") df <- read_md(file)  # write to disk write_md(df, \"example.md\") } # }"},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an example metadata template to the working directory — use_metadata","title":"Write an example metadata template to the working directory — use_metadata","text":"Test function","code":""},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an example metadata template to the working directory — use_metadata","text":"","code":"use_metadata(file = \"metadata.Rmd\")"},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an example metadata template to the working directory — use_metadata","text":"file (string) file name place","code":""},{"path":"https://delma.ala.org.au/news/index.html","id":"delma-010","dir":"Changelog","previous_headings":"","what":"delma 0.1.0","title":"delma 0.1.0","text":"Welcome {delma}! ’re new . hope like .","code":""}]
