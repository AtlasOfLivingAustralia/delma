[{"path":"https://delma.ala.org.au/articles/quick_start_guide.html","id":"methodological-approach","dir":"Articles","previous_headings":"","what":"Methodological approach","title":"Quick start guide","text":"convert markdown EML, delma relies assumption header levels markdown reflect nested structure resulting xml. example, markdown file might contain text: parse xml: accomplish conversion, built set parsers convert data sequence: Rather export individual parsers, delma provides set transformers as_eml_ prefix, e.g.: Every permutation as_eml_ functions provided delma, meaning can simply choose outcome looking , let delma handle parsing chain needed return object class require.","code":"# EML ## Dataset ### Title My title <EML>   <dataset>     <title>My title<\/title>   <\/dataset> <EML> .md file -> character -> tibble -> list -> xml -> .xml file library(delma)  c(\"# Heading 1\",    \"## Heading 2\",   \"text content\") |>   as_eml_tibble()  c(\"# Heading 1\",    \"## Heading 2\",   \"text content\") |>   as_eml_xml()"},{"path":"https://delma.ala.org.au/articles/quick_start_guide.html","id":"reading-and-writing","dir":"Articles","previous_headings":"","what":"Reading and writing","title":"Quick start guide","text":"standard ALA R packages, read_ functions delma return tibble. two variants, one reading data markdown: second reading data EML: corresponding write functions write_md() write_eml(). functions accept objects classes supported delma, possible pipe read write functions together without intermediate stages: worth noting, though, quite simple wrapper functions existing import transformation functions. example, code block can rewritten using one delma function, follows:","code":"file <- system.file(\"example_data\",                      \"README_md_example.md\",                      package = \"delma\") read_md(file) read_eml(\"https://collections.ala.org.au/ws/eml/dr368\") system.file(\"example_data\",              \"README_md_example.md\",              package = \"delma\") |>   read_md() |>   write_eml(\"output.xml\") library(xml2)  system.file(\"example_data\",              \"README_md_example.md\",              package = \"delma\") |>   base::readLines() |>   delma::as_eml_xml() |>   xml2::write_xml(\"output.xml\")"},{"path":"https://delma.ala.org.au/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Shandiya Balasubramaniam. Author. Dax Kellie. Author.","code":""},{"path":"https://delma.ala.org.au/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Balasubramaniam S, Kellie D (2025). delma: Convert Rmarkdown Quarto documents Ecological Metadata Language. R package version 0.1.0, https://delma.ala.org.au.","code":"@Manual{,   title = {delma: Convert Rmarkdown and Quarto documents to Ecological Metadata Language},   author = {Martin Westgate and Shandiya Balasubramaniam and Dax Kellie},   year = {2025},   note = {R package version 0.1.0},   url = {https://delma.ala.org.au}, }"},{"path":[]},{"path":"https://delma.ala.org.au/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convert Rmarkdown and Quarto documents to Ecological Metadata Language","text":"delma package converting metadata statements written markdown, RMarkdown Quarto markdown Ecological Metadata Language (EML). named genus legless lizards endemic Australia, whose name happens contain letters ‘e’, ‘m’ ‘l’. logo depicts striped legless lizard (Delma impar) style classic mobile game ‘snake’, play observation Delma often mistaken snakes. drawn Martin Westgate. comments, questions suggestions, please contact us.","code":""},{"path":"https://delma.ala.org.au/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert Rmarkdown and Quarto documents to Ecological Metadata Language","text":"package active development, yet available CRAN. can install latest development version GitHub : Load package:","code":"install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/delma\") library(delma)"},{"path":"https://delma.ala.org.au/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Convert Rmarkdown and Quarto documents to Ecological Metadata Language","text":"primary use case delma build metadata statements sharing biodiversity data. first step create markdown file, add headings like conform EML standard. header ‘level’ (.e. number #) used designate degree nesting. don’t want start scratch, can use example statement provided: document can knit like Rmarkdown document, using either ‘knit’ button RStudio, function rmarkdown::knit(). cases render format defined yaml section, defaults html_document, can easily changed. convert document EML, use: Note EML documents use extension .xml. check document formatted accordance EML standard, use: detailed description delma’s capabilities methods, see ‘Quick start guide’ vignette.","code":"use_metadata(\"my_metadata_statement.Rmd\") render_metadata(\"my_metadata_statement.Rmd\",                  \"metadata.xml\") check_metadata(\"metadata.xml\")"},{"path":"https://delma.ala.org.au/index.html","id":"citing-delma","dir":"","previous_headings":"","what":"Citing delma","title":"Convert Rmarkdown and Quarto documents to Ecological Metadata Language","text":"generate citation package version using, can run: current recommended citation : Westgate MJ, Balasubramaniam S & Kellie D (2024) Convert Rmarkdown Quarto documents Ecological Metadata Language. R Package version 0.1.0.","code":"citation(package = \"delma\") #> To cite delma in publications use: #>  #>   Westgate M, Balasubramaniam S, Kellie D (2025). _delma: Convert #>   Rmarkdown and Quarto documents to Ecological Metadata Language_. R #>   package version 0.1.0, <https://delma.ala.org.au>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {delma: Convert Rmarkdown and Quarto documents to Ecological Metadata Language}, #>     author = {Martin Westgate and Shandiya Balasubramaniam and Dax Kellie}, #>     year = {2025}, #>     note = {R package version 0.1.0}, #>     url = {https://delma.ala.org.au}, #>   }"},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to a list — as_eml_list","title":"Convert metadata to a list — as_eml_list","text":"Takes object class xml_document tibble, converts list. converting xml_document, simply wrapper xml2::as_list()","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to a list — as_eml_list","text":"","code":"as_eml_list(x, ...)  # S3 method for class 'tbl_df' as_eml_list(x, ...)  # S3 method for class 'list' as_eml_list(x, ...)  # S3 method for class 'xml_document' as_eml_list(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to a list — as_eml_list","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to a list — as_eml_list","text":"list, nested structure XML/md attributes XML nodes, preserved.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to a tibble — as_eml_tibble","title":"Convert metadata to a tibble — as_eml_tibble","text":"Takes objects class list xml_document converts tibble particular structure, designed storing nested data. Tibbles required attributes stored list-columns, supported class data.frame.","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to a tibble — as_eml_tibble","text":"","code":"as_eml_tibble(x, ...)  # S3 method for class 'tbl_df' as_eml_tibble(x, ...)  # S3 method for class 'list' as_eml_tibble(x, ...)  # S3 method for class 'xml_document' as_eml_tibble(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to a tibble — as_eml_tibble","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to a tibble — as_eml_tibble","text":"object class tbl_df, tbl data.frame, containing following fields: level (int) gives nestedness level node/heading question label (chr) xml tag text (chr) text stored within tag attributes (list) attributes tag","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata to an xml_document — as_eml_xml","title":"Convert metadata to an xml_document — as_eml_xml","text":"Takes character vector, tibble, list converts xml_document, defined xml2 package. converting list, simply wrapper xml2::as_xml_document()","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert metadata to an xml_document — as_eml_xml","text":"","code":"as_eml_xml(x, ...)  # S3 method for class 'tbl_df' as_eml_xml(x, ...)  # S3 method for class 'list' as_eml_xml(x, ...)  # S3 method for class 'xml_document' as_eml_xml(x, ...)"},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert metadata to an xml_document — as_eml_xml","text":"x Object converted ... arguments, currently ignored","code":""},{"path":"https://delma.ala.org.au/reference/as_eml_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert metadata to an xml_document — as_eml_xml","text":"xml_document specified nodes attributes.","code":""},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of a metadata statement — check_metadata","title":"Check validity of a metadata statement — check_metadata","text":"Darwin Core standard, metadata statements mandatory must provided Ecological Metadata Language (EML) file called eml.xml. function applies series checks designed GBIF check structure specified xml document consistency standard. Note, however, function check content files, meaning file structurally sound still lacking critical information.","code":""},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of a metadata statement — check_metadata","text":"","code":"check_metadata(file = NULL, schema = NULL, quiet = FALSE)"},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of a metadata statement — check_metadata","text":"file EML file check Can either local URL. schema Either NULL (default) compare GBIF profile; URL valid schema (passed internally xml2::read_xml). quiet (logical) messages hidden? Defaults FALSE","code":""},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of a metadata statement — check_metadata","text":"Invisibly returns tibble showing parsed errors; empty tibble errors identified.","code":""},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check validity of a metadata statement — check_metadata","text":"function uses local versions dc.xsd, eml-gbif-profile.xsd eml.xsd downloaded http://rs.gbif.org/schema/eml-gbif-profile/1.3/ 2024-09-25.","code":""},{"path":"https://delma.ala.org.au/reference/check_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check validity of a metadata statement — check_metadata","text":"","code":"if (FALSE) { # \\dontrun{ # check a file check_eml(file = \"https://collections.ala.org.au/ws/eml/dr368\") } # }"},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert metadata between markdown and EML — delma-package","title":"Convert metadata between markdown and EML — delma-package","text":"Ecological Metadata Language common framework describing ecological datasets can shared reused. delma supports users write metadata statements markdown greater transparency ease--use, convert EML efficient transfer.","code":""},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert metadata between markdown and EML — delma-package","text":"Main functions use_metadata() - Create boilerplate metadata statement render_metadata() - Render metadata EML document check_metadata() - Run checks EML document Reading writing read_eml()/write_eml() - Read / write EML files tbl_df read_md()/write_md() - Read / write Rmd Qmd files tbl_df Format manipulation as_eml_tibble() - Convert metadata class tbl_df as_eml_list() - Convert metadata class list as_eml_xml()- Convert metadata class xml_document","code":""},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert metadata between markdown and EML — delma-package","text":"questions, comments suggestions, please email support@ala.org.au.","code":""},{"path":[]},{"path":"https://delma.ala.org.au/reference/delma-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert metadata between markdown and EML — delma-package","text":"Maintainer: Martin Westgate martin.westgate@csiro.au Authors: Shandiya Balasubramaniam shandiya.balasubramaniam@csiro.au Dax Kellie dax.kellie@csiro.au","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an EML-formatted metadata document — read_eml","title":"Read an EML-formatted metadata document — read_eml","text":"read_eml() imports metadata EML file workspace tibble.","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an EML-formatted metadata document — read_eml","text":"","code":"read_eml(file)"},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an EML-formatted metadata document — read_eml","text":"file Filename URL read .","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an EML-formatted metadata document — read_eml","text":"read_eml() returns object class tbl_df, tbl data.frame (.e. tibble).","code":""},{"path":"https://delma.ala.org.au/reference/read_eml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an EML-formatted metadata document — read_eml","text":"","code":"if (FALSE) { # \\dontrun{ # read from a url df <- read_eml(\"https://collections.ala.org.au/ws/eml/dr368\") } # }"},{"path":"https://delma.ala.org.au/reference/read_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Read markdown-formatted metadata — read_md","title":"Read markdown-formatted metadata — read_md","text":"read_md() imports metadata markdown file workspace tibble.","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read markdown-formatted metadata — read_md","text":"","code":"read_md(file)"},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read markdown-formatted metadata — read_md","text":"file Filename read . Must either .md, .Rmd .Qmd file.","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read markdown-formatted metadata — read_md","text":"read_md() returns object class tbl_df, tbl data.frame (.e. tibble).","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read markdown-formatted metadata — read_md","text":"read_md() unusual calls rmarkdown::render() quarto::quarto_render() internally ensure code blocks snippets parsed correctly. ensures dynamic content rendered correctly resulting EML document, makes function considerably slower standard import function. Conceptually, therefore, closer renderer output type tibble traditional read_ function. approach one unusual consequence; prevents 'round-tripping' embedded code. , dynamic content written code snippets within metadata statement rendered plain text EML. EML document later re-imported Rmd using read_eml() write_md(), formerly dynamic content shown plain text. Internally, read_md() calls lightparser::split_to_tbl().","code":""},{"path":"https://delma.ala.org.au/reference/read_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read markdown-formatted metadata — read_md","text":"","code":"if (FALSE) { # \\dontrun{ # read from a url file <- system.file(\"example_data\",                      \"README_md_example.md\",                      package = \"delma\") df <- read_md(file) } # }"},{"path":"https://delma.ala.org.au/reference/render_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a metadata statement to EML — render_metadata","title":"Render a metadata statement to EML — render_metadata","text":"Basically expanded version rmarkdown::render/quarto::quarto_render convert metadata statement EML. Note process ignores output section supplied yaml, though still supplied rendering via packages. Internally function wraps read_md() write_eml() order; see functions details.","code":""},{"path":"https://delma.ala.org.au/reference/render_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a metadata statement to EML — render_metadata","text":"","code":"render_metadata(   input,   output_file = NULL,   output_dir = NULL,   overwrite = TRUE,   quiet = FALSE )"},{"path":"https://delma.ala.org.au/reference/render_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a metadata statement to EML — render_metadata","text":"input file rendered EML output_file name output file output_dir output directory rendered output_file overwrite (logical) existing file overwritten? Defaults TRUE. quiet (logical) messages suppressed? Defaults FALSE.","code":""},{"path":"https://delma.ala.org.au/reference/render_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a metadata statement to EML — render_metadata","text":"return object; called side-effect rendering file EML.","code":""},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an example metadata statement to disk — use_metadata","title":"Write an example metadata statement to disk — use_metadata","text":"function places metadata template address specified \"file\", defaulting \"metadata.Rmd\" working directory. template built way standard rendering rmarkdown Quarto HTML PDF function; also renders valid EML using render_metadata().","code":""},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an example metadata statement to disk — use_metadata","text":"","code":"use_metadata(file = \"metadata.Rmd\", overwrite = FALSE)"},{"path":"https://delma.ala.org.au/reference/use_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an example metadata statement to disk — use_metadata","text":"file (string) name resulting file, either .Rmd .Qmd suffix. overwrite (logical) existing file overwritten? Defaults FALSE.","code":""},{"path":"https://delma.ala.org.au/reference/write_eml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an EML-formatted metadata document — write_eml","title":"Write an EML-formatted metadata document — write_eml","text":"write_eml() writes tibble, list xml_document EML file. Note EML files always file extension .xml.","code":""},{"path":"https://delma.ala.org.au/reference/write_eml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an EML-formatted metadata document — write_eml","text":"","code":"write_eml(x, file)"},{"path":"https://delma.ala.org.au/reference/write_eml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an EML-formatted metadata document — write_eml","text":"x Object class handled delma; .e. tbl_df, list xml_document. file Filename write ","code":""},{"path":"https://delma.ala.org.au/reference/write_eml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an EML-formatted metadata document — write_eml","text":"Desn't return anything; called side-effect writing specified EML file disk","code":""},{"path":"https://delma.ala.org.au/reference/write_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a markdown-formatted metadata document — write_md","title":"Write a markdown-formatted metadata document — write_md","text":"Write markdown-formatted metadata document","code":""},{"path":"https://delma.ala.org.au/reference/write_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a markdown-formatted metadata document — write_md","text":"","code":"write_md(x, file)"},{"path":"https://delma.ala.org.au/reference/write_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a markdown-formatted metadata document — write_md","text":"x Object class handled delma; .e. tbl_df, list xml_document. #' @param file Filename write . Must either .md, .Rmd .Qmd file.","code":""},{"path":"https://delma.ala.org.au/reference/write_md.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a markdown-formatted metadata document — write_md","text":"Similar read_md(), write_md() considerably less generic write_ functions. x xml_document convert seamlessly; lists tibbles manually formatted require care. parse correctly, supplied tibble must contain columns supplied read_md(). Internally, write_md() calls lightparser::combine_tbl_to_file.","code":""},{"path":"https://delma.ala.org.au/news/index.html","id":"delma-010","dir":"Changelog","previous_headings":"","what":"delma 0.1.0","title":"delma 0.1.0","text":"Welcome {delma}! ’re new . hope like .","code":""}]
